name: Deploy to Vercel
on: [pull_request]
jobs:
    deploy-to-vercel:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Vercel Action
              id: vercel_action
              uses: amondnet/vercel-action@v20
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  github-token: ${{ secrets.TOKEN_GITHUB }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
    audit_with_lighthouse:
        needs: deploy-to-vercel
        runs-on: ubuntu-latest
        steps:
            - name: Audit URLs using Lighthouse
              id: lighthouse_audit
              uses: treosh/lighthouse-ci-action@v7
              with:
                  # add as many urls here as you wish to audit
                  # prefixed by the preview-url
                  urls: |
                      ${{ steps.vercel_action.outputs.preview-url }}
                  uploadArtifacts: true
                  temporaryPublicStorage: true
                  runs: 3
            - name: Format lighthouse result
              id: lighthouse_result
              if: ${{ always() }}
              uses: actions/github-script@v4
              with:
                  github-token: ${{ secrets.TOKEN_GITHUB }}
                  script: |
                      const links = ${{ steps.lighthouse_audit.outputs.links }}
                      const results = (${{ steps.lighthouse_audit.outputs.manifest }}).filter(result => result.isRepresentativeRun);
                      const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴';
                      const comment = results.map((result) => {
                        const summary = result.summary;
                        const url = result.url;
                        return `
                        🌎 [${url}](${url})
                        ⚡️ [Lighthouse report](${links[url]})
                        | Category | Score |
                        | --- | --- |
                        ${Object.keys(summary).map((key) => {
                          const percentage = Math.round(summary[key] * 100);
                          return `| ${score(percentage)} ${key} | ${percentage} |`;
                        }).join('\n')}
                        `;
                      }).join('---');
                      core.setOutput("comment", comment)
            - name: Add Lighthouse comment to PR
              id: lighthouse_comment_to_pr
              if: ${{ always() }}
              uses: marocchino/sticky-pull-request-comment@v1
              with:
                  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
                  number: ${{ github.event.pull_request.number }}
                  header: lighthouse
                  message: |
                      ${{ steps.lighthouse_result.outputs.comment }}
